#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Summer report
\end_layout

\begin_layout Standard
I investigated how to simulate soft elastic object effectively using only
 coarse meshes.
 We will break this investigation into 2 parts in this report
\end_layout

\begin_layout Enumerate
How to quickly fit the material property of an object to a FEM simulation
 through dynamics using DAC (
\begin_inset CommandInset citation
LatexCommand cite
key "Chen:2017:DNC:3072959.3073669"

\end_inset

 Section 3).
\end_layout

\begin_layout Enumerate
Investigate FEM locking/numerical stiffening on coarse mesh.
 In particular, I looked at the cause and how it affects the simulation
 in static and dynamic.
\end_layout

\begin_layout Section
Fitting Young's modulus using DAC
\begin_inset CommandInset label
LatexCommand label
name "sec:Fitting-Young's-modulus"

\end_inset


\end_layout

\begin_layout Standard
The material properties of elastic objects specified by the manufacturer
 are often inaccurate (due to variation in fabrication process, I assume),
 and calibration is needed for each object.
 Fitting material properties through tracking is not an easy task.
 but DAC is a simple algorithm and work surprisingly well in the cases considere
d in 
\begin_inset CommandInset citation
LatexCommand cite
key "Chen:2017:DNC:3072959.3073669"

\end_inset

.
 DAC consists of the following steps:
\end_layout

\begin_layout Enumerate
Track the oscillation of a simple deformation mode of the object
\begin_inset CommandInset label
LatexCommand label
name "enu:Track-the-oscillation"

\end_inset


\end_layout

\begin_layout Enumerate
Solve the harmonic inverse problem 
\begin_inset CommandInset citation
LatexCommand cite
key "doi:10.1063/1.475324"

\end_inset

 from the trajectory in 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Track-the-oscillation"

\end_inset

.
 and extract the dominating frequency (frequency with largest amplitude),
 
\begin_inset Formula $\omega_{l}$
\end_inset

 
\begin_inset CommandInset label
LatexCommand label
name "enu:Solve-the-harmonic"

\end_inset


\end_layout

\begin_layout Enumerate
Create a mesh for the FEM simulation, with initial Young's modulus 
\begin_inset Formula $Y_{0}=1Pa$
\end_inset

.
 Other material parameters (Poisson ratio, density, etc) are not fitted
 here, so will be set to some physical values and stay unchanged after DAC.
 For example Poisson ratio can be set to 
\begin_inset Formula $P=0.48,$
\end_inset

 and the density 
\begin_inset Formula $\rho$
\end_inset

 is set to the value specified by the manufacturer.
 Also the material model can is arbitrary (linear, Neo-hookean etc)
\begin_inset CommandInset label
LatexCommand label
name "enu:Create-a-mesh"

\end_inset


\end_layout

\begin_layout Enumerate
Find the lowest the eigenvalue problem
\begin_inset CommandInset label
LatexCommand label
name "enu:Find-the-lowest"

\end_inset


\begin_inset Formula 
\[
Kx=\lambda_{l}Mx,
\]

\end_inset

where 
\begin_inset Formula $K$
\end_inset

 and 
\begin_inset Formula $M$
\end_inset

 are the stiffness matrix and mass matrix from the FEM simulation
\begin_inset Foot
status open

\begin_layout Plain Layout
If the model chosen in 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Create-a-mesh"

\end_inset

.
 is nonlinear, 
\begin_inset Formula $K$
\end_inset

 must be chosen at a equilibrium state to ensure positive definiteness.
\end_layout

\end_inset

 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Create-a-mesh"

\end_inset

., with the same boundary conditions from the simple deformation in 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Track-the-oscillation"

\end_inset

..
 
\end_layout

\begin_layout Enumerate
Rescale the Young's modulus by 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Solve-the-harmonic"

\end_inset

.
 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Find-the-lowest"

\end_inset

.
\begin_inset CommandInset label
LatexCommand label
name "enu:Rescale-the-Young's"

\end_inset


\begin_inset Formula 
\[
Y=Y_{0}\frac{\omega_{l}^{2}}{\lambda_{l}}
\]

\end_inset


\end_layout

\begin_layout Standard
This fitting is based on the fact that the eigenvalues of the system scale
 linearly with Young's modulus.
 After DAC, the Young's modulus can be used for simulating the same object
 
\emph on
with the same mesh
\emph default
.
 The next section of this writeup investigate the mesh-dependent stiffness,
 which prevent us from using DAC on the same object with different mesh
 resolutions.
\end_layout

\begin_layout Section
Mesh-dependent stiffness
\end_layout

\begin_layout Standard
Following the fact that Young's modulus scales linearly with the eigenvalue,
 we observed that different mesh resolution of same object would have different
 eigenvalues
\begin_inset Foot
status open

\begin_layout Plain Layout
As mesh gets finer and finer, the number of eigenvalue increases, and the
 new eigenvalues corresponds to the high oscillatory modes which damp out
 quickly.
 Here we are talking about lower eigenvalues, which correspond to the dominating
 dynamic modes with larger amplitudes, and should ideally stay the same
 across different mesh resolutions.
\end_layout

\end_inset

, meaning the apparent stiffness of the object is different, and the modes
 would oscillate at different frequencies.
\end_layout

\begin_layout Subsection
A 2D Example
\end_layout

\begin_layout Standard
First start from an polygon shape object (from Distmesh 
\begin_inset CommandInset citation
LatexCommand cite
key "Persson:2004aa"

\end_inset

) with 2 level of refinements (See Fig 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Polygon-from-Distmesh"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Coarse-mesh"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Fine-mesh"

\end_inset

).
 Solve the general eigenvalue problem with Neumann B.C.
 for both mesh
\begin_inset Formula 
\[
Kx=\lambda Mx
\]

\end_inset

and eliminate the null space corresponding to the rigid motion, we plot
 the lowest eigenmode in Fig 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Coarse-mesh-first"

\end_inset

 and Fig 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Fine-mesh-first"

\end_inset

.
 These eigenmodes look similar on the object, but the eigenvalues are very
 different, 
\begin_inset Formula $\lambda=2.35$
\end_inset

 for the low resolution mesh, and 
\begin_inset Formula $\lambda=1.99$
\end_inset

 for the high resolution mesh, meaning simulating on the low resolution
 mesh would make the object look stiffer and oscillate faster.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename report_images/polygon.png
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Polygon from Distmesh 
\begin_inset CommandInset citation
LatexCommand cite
key "Persson:2004aa"

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Polygon-from-Distmesh"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename report_images/polygon_coarse.png
	scale 35

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Coarse mesh
\begin_inset CommandInset label
LatexCommand label
name "fig:Coarse-mesh"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename report_images/polygon_fine.png
	scale 35

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Fine mesh
\begin_inset CommandInset label
LatexCommand label
name "fig:Fine-mesh"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename report_images/polygon_coarse_firstmode.png
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Coarse mesh first mode with eigenvalue 
\begin_inset CommandInset label
LatexCommand label
name "fig:Coarse-mesh-first"

\end_inset


\begin_inset Formula $=2.3533$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename report_images/polygon_fine_firstmode.png
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Fine mesh first mode with eigenvalue
\begin_inset CommandInset label
LatexCommand label
name "fig:Fine-mesh-first"

\end_inset

 
\begin_inset Formula $=1.99$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Theoretical background
\begin_inset CommandInset label
LatexCommand label
name "subsec:Theoretical-background"

\end_inset


\end_layout

\begin_layout Standard
This discrepancy comes from the discretization error from FEM, so it is
 safe to assume that the material will look softer and softer as we refine
 the mesh.
 This is indeed the case, as indicated in 
\begin_inset CommandInset citation
LatexCommand cite
key "Ciarlet:1968:NMH:2716620.2716941"

\end_inset

 (lemma 3), where they showed that the approximate the general eigenvalue
 problem of an elliptical B.V.P.
 with Ritz approximation/Galerkin method will always lead to larger eigenvalues.
 Intuitively, this comes from the fact that we are searching in a less inclusive
 function space as we coarsen the mesh in the weak form of the elliptical
 B.V.P.
\end_layout

\begin_layout Subsection
A 1D example
\end_layout

\begin_layout Standard
In this subsection we discuss a 1D example in more detail and demonstrate
 DAC and it's drawback.
\end_layout

\begin_layout Subsubsection
Continuous case
\end_layout

\begin_layout Standard
Consider the 1D wave equation with Dirichlet BC over an interval 
\begin_inset Formula $x\in\left[0,L\right]$
\end_inset


\begin_inset Formula 
\begin{eqnarray}
u_{tt} & = & c^{2}\nabla^{2}u\label{eq:wave eq}\\
u(t,x=0) & = & u(t,x=L)=0\nonumber 
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Look for the solution of the form
\begin_inset Formula 
\[
u(t,x)=e^{i\sqrt{\lambda}t}U(x)
\]

\end_inset

is equivalent to solve the eigenvalue problem for the operator
\begin_inset Formula 
\begin{equation}
\mathbb{L}U=-c^{2}\nabla^{2}U=\lambda U\label{eq:eigenvalue prob}
\end{equation}

\end_inset

The analytical solution for the eigenvalues: 
\begin_inset Formula 
\begin{equation}
\lambda_{i}=\frac{(ic\pi)^{2}}{L^{2}}\;\,,i\in\mathbb{N}\label{eq:true eig}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
For example, with 
\begin_inset Formula $L=1$
\end_inset

, 
\begin_inset Formula $i=1$
\end_inset

 (the lowest eigenvalue) we have 
\begin_inset Formula $\lambda_{1}=\pi^{2}c^{2}\approx9.86c^{2}$
\end_inset

 , and 
\begin_inset Formula $\sqrt{\lambda_{1}}$
\end_inset

 is the frequency (in time) of the dominating dynamic mode Semi-discretization
\end_layout

\begin_layout Standard
It is common to do semi-discretization on (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:wave eq"

\end_inset

) in space, and step the resulting ODE in time to simulate the dynamics.
 This semi-discretization in space is highly related to the eigenvalue problem
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:eigenvalue prob"

\end_inset

).
 In a sense, (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:eigenvalue prob"

\end_inset

) split the spatial variable from the time variable in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:wave eq"

\end_inset

), just as how the semi-discretization split the spatial variable from the
 time variable.
 However, it is not clear 
\end_layout

\begin_layout Enumerate
how the discretization error from semi-discretizing in space can pollute
 the overall time trajectory (dynamic behavior), 
\begin_inset CommandInset label
LatexCommand label
name "enu:how-the-discretization"

\end_inset


\end_layout

\begin_layout Enumerate
and how does this error affect the ODE time stepping error
\end_layout

\begin_layout Standard
Here we will mainly focus on enum(
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:how-the-discretization"

\end_inset

.).
\end_layout

\begin_layout Subsubsection
Finite difference
\end_layout

\begin_layout Standard
The operator in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:eigenvalue prob"

\end_inset

) is the negative Laplacian scaled.
 For finite difference in 1D with Dirichlet BCs the Laplacian matrix and
 eigenvalues are well-known.
 That is, using central differences on a uiform grid the FD matrix for (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:eigenvalue prob"

\end_inset

)
\begin_inset Formula 
\begin{eqnarray*}
A_{h}{\bf u} & = & \lambda_{h}{\bf u}\\
A_{h} & = & \frac{-L^{2}c^{2}}{h^{2}}\left[\begin{array}{ccccc}
2 & -1\\
-1 & 2 & -1\\
 & \ddots & \ddots & \ddots\\
 &  & -1 & 2 & -1\\
 &  &  & -1 & 2
\end{array}\right]
\end{eqnarray*}

\end_inset

where 
\begin_inset Formula $h$
\end_inset

 is the interval size.
 The eigenvalues of this matrix is also well-known
\begin_inset Formula 
\begin{equation}
\lambda_{h,i}=\frac{2c^{2}L^{2}}{h^{2}}\left(1-\cos(\frac{ih\pi}{L})\right),\ h\in\mathbb{Z}^{+},\ i\in[1,\frac{L}{h}]\label{eq:eval FD}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Notice that the eigenvalue from (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:eval FD"

\end_inset

) approach the eigenvalues (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:true eig"

\end_inset

) from below as 
\begin_inset Formula $h\rightarrow0.$
\end_inset

 At first this seems contradictory to what we mentioned in 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Theoretical-background"

\end_inset

 and the lemma in 
\begin_inset CommandInset citation
LatexCommand cite
key "Ciarlet:1968:NMH:2716620.2716941"

\end_inset

.
 However, this is not the case, since finite difference discretization is
 not based on the weak form.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../1Dwave/FD_1D.jpg
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Finite element
\end_layout

\begin_layout Standard
Another way to solve the eigenvalue problem (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:eigenvalue prob"

\end_inset

) is using finite element.
 First convert (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:eigenvalue prob"

\end_inset

) to the weak form
\begin_inset Formula 
\begin{eqnarray*}
-c^{2}\int V\nabla^{2}Udx & =c^{2}\int\nabla U\nabla Vdx & -c^{2}\int\nabla\cdot(V\nabla U)dx
\end{eqnarray*}

\end_inset

and divergence theorem says the second term on the RHS is 
\begin_inset Formula $0$
\end_inset

 with Dirichlet BCs, so (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:eigenvalue prob"

\end_inset

) is
\begin_inset Formula 
\begin{equation}
c^{2}\int\nabla U\nabla Vdx=\lambda\int VUdx\label{eq:weak form eig}
\end{equation}

\end_inset

In Galerkin method we choose the same linear hat function as the function
 space for 
\begin_inset Formula $U$
\end_inset

 and 
\begin_inset Formula $V$
\end_inset

.
 The resulting element stiffness matrix is 
\begin_inset Formula 
\[
K_{e,h}=\frac{Lc^{2}}{h}\left[\begin{array}{cc}
1 & -1\\
-1 & 1
\end{array}\right]
\]

\end_inset


\end_layout

\begin_layout Standard
and element mass matrix from the RHS
\begin_inset Formula 
\[
M_{e,h}=\frac{\lambda h}{6L}\left[\begin{array}{cc}
2 & 1\\
1 & 2
\end{array}\right]
\]

\end_inset

After assembly and eliminate the boundary variables from Dirichlet BCs,
 we have the system
\begin_inset Formula 
\begin{eqnarray}
K_{h}{\bf u} & = & \lambda M_{h}{\bf u}\label{eq:eig FE}\\
K_{h} & = & \frac{-Lc^{2}}{h}\left[\begin{array}{ccccc}
2 & -1\\
-1 & 2 & -1\\
 & \ddots & \ddots & \ddots\\
 &  & -1 & 2 & -1\\
 &  &  & -1 & 2
\end{array}\right]\nonumber \\
M_{h} & = & \frac{h}{6L}\left[\begin{array}{ccccc}
4 & 2\\
2 & 4 & 2\\
 & \ddots & \ddots & \ddots\\
 &  & 2 & 4 & 2\\
 &  &  & 2 & 4
\end{array}\right]\nonumber 
\end{eqnarray}

\end_inset

The analytical solution to the generalized eigenvalue problem (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:eig FE"

\end_inset

) is not known yet, but it seems like it is following
\begin_inset Formula 
\begin{equation}
\lambda_{h,i}=-\frac{2c^{2}L^{2}}{h^{2}}\left(1-\cosh(\frac{ih\pi}{L})\right),\ h\in\mathbb{Z}^{+},\ i\in[1,\frac{L}{h}].\label{eq:eig fe guess}
\end{equation}

\end_inset

Notice that (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:eig fe guess"

\end_inset

) approach (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:true eig"

\end_inset

) from above as 
\begin_inset Formula $h\rightarrow0$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../1Dwave/FE_1D.jpg
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Story so far
\end_layout

\begin_layout Standard
The simple analysis above shows that, the eigenvalues to (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:true eig"

\end_inset

), which represents the dynamic property of the solution, is affected by
 the mesh resolution used in the semi-discretization.
 The effect is not huge numerically (
\begin_inset Formula $\mathcal{O}(h^{2}))$
\end_inset

, but the resulting dynamic simulation may look very different.
 This is a simplest aspect of enum(
\begin_inset CommandInset ref
LatexCommand ref
reference "enu:how-the-discretization"

\end_inset

1.).
 A weird/interesting discovery on the path was that changing from FD to
 FE reversed the 
\begin_inset Formula $h$
\end_inset

-dependence of the eigenvalues.
 (Figure 1 is like a mirrored inverse of Figure 2, observed by Danny)
\end_layout

\begin_layout Subsubsection
DAC fix 
\end_layout

\begin_layout Standard
DAC provides a simple to match the dynamic property of the original continuous
 equation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:wave eq"

\end_inset

).
 That is, we can scale the eigenvalue corresponding to the dominating mode
 (the lowest eigenvalue).
 If we do that, we can rescale the stiffness matrix by 
\begin_inset Formula $\frac{\lambda_{1}}{\lambda_{h,1}}$
\end_inset

.
 The resulting plot for the lowest eigenvalue is in Figure 3.
 The difference between the method in 
\begin_inset CommandInset citation
LatexCommand cite
key "Chen:2017:DNC:3072959.3073669"

\end_inset

 and what I used here is that, the rescaling factor is derived from an analytica
l form of the lowest eigenvalue (the dominating mode), which is not always
 avaible.
 To handle more complicated objects, 
\begin_inset CommandInset citation
LatexCommand cite
key "Chen:2017:DNC:3072959.3073669"

\end_inset

 used a vision-based technique to extract the dominating mode of motion,
 as described in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Fitting-Young's-modulus"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../1Dwave/FE_1D_fix.jpg
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
No free lunch
\end_layout

\begin_layout Standard
However, there's no free lunch, and this simple scaling won't fix other
 eigenvalues.
 For example, the second eigenvalue will be scaled to another number, but
 not its continuous counterpart, as shown in Figure 4.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../1Dwave/FE_1D_2nd_fix_wrong.jpg
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
2D static example
\end_layout

\begin_layout Standard
Here is another demonstration in the static setting
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename report_images/static_tri_single.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Force required to move a single triangle element
\begin_inset CommandInset label
LatexCommand label
name "fig:Force-required-to"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename report_images/static_tri_fine_mesh.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Force required to achieve
\begin_inset CommandInset label
LatexCommand label
name "fig:Force-required-to-1"

\end_inset

 the same deformation on a refined mesh
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
In Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Force-required-to"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Force-required-to-1"

\end_inset

, the yellow triangle is the rest shape.
 In Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Force-required-to"

\end_inset

 we deformed the top node and have the lower 2 fixed, changing it into the
 blue triangle.
 The red arrows are the force required to hold the blue triangle in this
 deformed shape.
 If we refine the triangle, as shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Force-required-to-1"

\end_inset

, and perform the same operation, that is, move the top node while keeping
 the bottom two corners fixed (all other nodes are free), the force required
 at each nodes to keep the deformed triangle is much less.
\end_layout

\begin_layout Subsection
Locking/Numerical Stiffening
\end_layout

\begin_layout Standard
The mesh-dependent stiffness is caused by the fact the function space spanned
 by the bases functions is not rich enough, which is also the same cause
 for the locking effect discussed in engineering literature: when the Poisson
 ratio is high, it takes force up to an order of magnitude larger to bend
 linear elements to the same amount of deformation on a coarse mesh.
 Thus it is worth trying different ways people mitigate locking.
 However, we should keep in mind that we have a different application:
\end_layout

\begin_layout Itemize
In engineering, the force magnitude is usually much larger, and the focus
 is usually the displacement
\end_layout

\begin_layout Itemize
For dynamic simulation in graphics, we also care about oscillation frequency,
 since collision is highly sensitive to the trajectory.
 
\end_layout

\begin_layout Subsection
Discontinuous Galerkin
\end_layout

\begin_layout Standard
Discontinuous Galerkin has been used to solve this problem in 
\begin_inset CommandInset citation
LatexCommand cite
key "kaufmann2009flexible"

\end_inset

, so the next step is to study this paper.
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "report_summer_2017"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
